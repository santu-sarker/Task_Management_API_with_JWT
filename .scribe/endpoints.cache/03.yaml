## Autogenerated by Scribe. DO NOT MODIFY.

name: Category
description: |-

  APIs to manage categories
endpoints:
  -
    httpMethods:
      - GET
    uri: api/categories
    metadata:
      groupName: Category
      groupDescription: |-

        APIs to manage categories
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":16,"name":"temporibus","slug":"temporibus","description":"Fugiat iste corrupti ex aperiam. At et aliquid sunt dolorum amet. Cupiditate adipisci laborum aut explicabo cumque enim corporis.","created_at":"2024-08-25T15:55:53.000000Z","updated_at":"2024-08-25T15:55:53.000000Z"},{"id":17,"name":"officiis","slug":"officiis","description":"Quia neque dolores voluptas sunt. Omnis dolores ut voluptatem laboriosam.","created_at":"2024-08-25T15:55:53.000000Z","updated_at":"2024-08-25T15:55:53.000000Z"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/categories
    metadata:
      groupName: Category
      groupDescription: |-

        APIs to manage categories
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: cjmzdipilz
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 700 characters.'
        required: false
        example: 'Debitis quas officia quaerat exercitationem dolor at veritatis nostrum.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: cjmzdipilz
      description: 'Debitis quas officia quaerat exercitationem dolor at veritatis nostrum.'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/categories/{id}'
    metadata:
      groupName: Category
      groupDescription: |-

        APIs to manage categories
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"error":"The route api\/categories\/1 could not be found."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/categories/{id}'
    metadata:
      groupName: Category
      groupDescription: |-

        APIs to manage categories
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: false
        example: ybqbobkhbaywkmmjujee
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'Must not be greater than 700 characters.'
        required: false
        example: 'Ab fuga incidunt cum sed aut aperiam est aut.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: ybqbobkhbaywkmmjujee
      description: 'Ab fuga incidunt cum sed aut aperiam est aut.'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/categories/{id}'
    metadata:
      groupName: Category
      groupDescription: |-

        APIs to manage categories
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
