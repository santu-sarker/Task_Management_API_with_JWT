name: Task
description: |-

  APIs to managing task
endpoints:
  -
    httpMethods:
      - GET
    uri: api/tasks
    metadata:
      groupName: Task
      groupDescription: |-

        APIs to managing task
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":111,"user_id":12,"category_id":4,"title":"Hatter. ''I deny it!'' said.","description":"Tempore qui deserunt consequuntur eos. Tempore voluptatem quia excepturi sint nulla. Saepe voluptatem et eos dolorem qui deleniti quis enim. Aut quod facere aut atque et quos commodi.","due_date":"2024-09-22","status":"pending","created_at":"2024-08-25T15:55:53.000000Z","updated_at":"2024-08-25T15:55:53.000000Z","user":{"id":12,"name":"Prof. Dulce Spinka","email":"rosanna.hackett@example.com","email_verified_at":"2024-08-25T15:55:53.000000Z","created_at":"2024-08-25T15:55:53.000000Z","updated_at":"2024-08-25T15:55:53.000000Z"}},{"id":112,"user_id":13,"category_id":9,"title":"Duchess: ''what a clear way.","description":"Eius dolores cumque non. Reprehenderit quos dolore nostrum culpa quia facere. Suscipit itaque debitis magnam.","due_date":"2024-09-06","status":"pending","created_at":"2024-08-25T15:55:53.000000Z","updated_at":"2024-08-25T15:55:53.000000Z","user":{"id":13,"name":"Prof. Ernestine Nienow IV","email":"haley.cary@example.net","email_verified_at":"2024-08-25T15:55:53.000000Z","created_at":"2024-08-25T15:55:53.000000Z","updated_at":"2024-08-25T15:55:53.000000Z"}}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tasks
    metadata:
      groupName: Task
      groupDescription: |-

        APIs to managing task
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: true
        example: yrvtjionkpbln
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Sunt quod nihil maiores quis ea vel.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date. Must be a date after or equal to <code>today</code>.'
        required: false
        example: '2051-08-29'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: pending
        type: string
        enumValues:
          - pending
          - completed
        exampleWasSpecified: false
        custom: []
      category_id:
        name: category_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: yrvtjionkpbln
      description: 'Sunt quod nihil maiores quis ea vel.'
      due_date: '2051-08-29'
      status: pending
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Task
      groupDescription: |-

        APIs to managing task
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"error":"The route api\/tasks\/1 could not be found."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Task
      groupDescription: |-

        APIs to managing task
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 255 characters.'
        required: false
        example: kqybcworuwtwwbwknyiwsaykx
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Perferendis laudantium natus nobis sint.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      due_date:
        name: due_date
        description: 'Must be a valid date. Must be a date after or equal to <code>today</code>.'
        required: false
        example: '2112-06-20'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      status:
        name: status
        description: ''
        required: false
        example: pending
        type: string
        enumValues:
          - pending
          - completed
        exampleWasSpecified: false
        custom: []
      category_id:
        name: category_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      title: kqybcworuwtwwbwknyiwsaykx
      description: 'Perferendis laudantium natus nobis sint.'
      due_date: '2112-06-20'
      status: pending
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Task
      groupDescription: |-

        APIs to managing task
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
