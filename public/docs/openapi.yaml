openapi: 3.0.3
info:
  title: Task_Management_API_with_JWT
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1:8000'
paths:
  /api/auth/login:
    post:
      summary: ''
      operationId: postApiAuthLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: merle.gaylord@example.org
                password:
                  type: string
                  description: ''
                  example: '}*j9G\2q$-Ppi;l'
              required:
                - email
                - password
  /api/auth/register:
    post:
      summary: ''
      operationId: postApiAuthRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: whqdxikigzoehtq
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: verdie.veum@example.net
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: 'BzC.RL0{bwdT2C=b(}:y'
              required:
                - name
                - email
                - password
  /api/auth/refresh:
    post:
      summary: ''
      operationId: postApiAuthRefresh
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Auth
  /api/auth/logout:
    post:
      summary: ''
      operationId: postApiAuthLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Auth
  /api/categories:
    get:
      summary: ''
      operationId: getApiCategories
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 20
                      name: adipisci
                      slug: adipisci
                      description: 'Qui atque porro quia et. Reprehenderit ut fuga qui consequatur exercitationem rem ut. Soluta qui corporis perferendis. Laudantium aperiam ipsum facilis quaerat sint veritatis dicta.'
                      created_at: '2024-08-26T11:34:29.000000Z'
                      updated_at: '2024-08-26T11:34:29.000000Z'
                    -
                      id: 21
                      name: consequuntur
                      slug: consequuntur
                      description: 'Eveniet occaecati quasi debitis soluta quos. Minima perferendis aut enim sequi iusto nesciunt. Minus modi aperiam qui ullam unde consequatur. Sunt et nihil incidunt atque sed id nihil.'
                      created_at: '2024-08-26T11:34:29.000000Z'
                      updated_at: '2024-08-26T11:34:29.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 20
                        name: adipisci
                        slug: adipisci
                        description: 'Qui atque porro quia et. Reprehenderit ut fuga qui consequatur exercitationem rem ut. Soluta qui corporis perferendis. Laudantium aperiam ipsum facilis quaerat sint veritatis dicta.'
                        created_at: '2024-08-26T11:34:29.000000Z'
                        updated_at: '2024-08-26T11:34:29.000000Z'
                      -
                        id: 21
                        name: consequuntur
                        slug: consequuntur
                        description: 'Eveniet occaecati quasi debitis soluta quos. Minima perferendis aut enim sequi iusto nesciunt. Minus modi aperiam qui ullam unde consequatur. Sunt et nihil incidunt atque sed id nihil.'
                        created_at: '2024-08-26T11:34:29.000000Z'
                        updated_at: '2024-08-26T11:34:29.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 20
                        name:
                          type: string
                          example: adipisci
                        slug:
                          type: string
                          example: adipisci
                        description:
                          type: string
                          example: 'Qui atque porro quia et. Reprehenderit ut fuga qui consequatur exercitationem rem ut. Soluta qui corporis perferendis. Laudantium aperiam ipsum facilis quaerat sint veritatis dicta.'
                        created_at:
                          type: string
                          example: '2024-08-26T11:34:29.000000Z'
                        updated_at:
                          type: string
                          example: '2024-08-26T11:34:29.000000Z'
      tags:
        - Category
    post:
      summary: ''
      operationId: postApiCategories
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: povpehbkwywga
                description:
                  type: string
                  description: 'Must not be greater than 700 characters.'
                  example: 'In sit saepe totam qui neque perferendis sunt suscipit.'
              required:
                - name
  '/api/categories/{id}':
    get:
      summary: ''
      operationId: getApiCategoriesId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'The route api/categories/1 could not be found.'
                properties:
                  error:
                    type: string
                    example: 'The route api/categories/1 could not be found.'
      tags:
        - Category
    put:
      summary: ''
      operationId: putApiCategoriesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Category
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: hjckuibimuoxm
                description:
                  type: string
                  description: 'Must not be greater than 700 characters.'
                  example: 'Excepturi et voluptatem non consequatur.'
    delete:
      summary: ''
      operationId: deleteApiCategoriesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Category
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: 1
        required: true
        schema:
          type: integer
  /api/tasks:
    get:
      summary: ''
      operationId: getApiTasks
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 115
                      user_id: 16
                      category_id: 9
                      title: 'Queen, in a Little Bill It.'
                      description: 'Sunt ea officia aut voluptas vero. Qui laudantium quaerat autem veniam libero. Nihil et illo aut repellat delectus aut culpa.'
                      due_date: '2024-09-15'
                      status: pending
                      created_at: '2024-08-26T11:34:28.000000Z'
                      updated_at: '2024-08-26T11:34:28.000000Z'
                      user:
                        id: 16
                        name: 'Ms. Duane Boehm I'
                        email: delphine20@example.com
                        email_verified_at: '2024-08-26T11:34:28.000000Z'
                        created_at: '2024-08-26T11:34:28.000000Z'
                        updated_at: '2024-08-26T11:34:28.000000Z'
                    -
                      id: 116
                      user_id: 17
                      category_id: 6
                      title: "I've got to the porpoise."
                      description: 'Enim molestiae rem consequatur minima voluptate qui. Iure nisi voluptatum voluptate rem fugiat corrupti.'
                      due_date: '2024-09-07'
                      status: pending
                      created_at: '2024-08-26T11:34:28.000000Z'
                      updated_at: '2024-08-26T11:34:28.000000Z'
                      user:
                        id: 17
                        name: 'Arnold Wilkinson'
                        email: astrid.bayer@example.net
                        email_verified_at: '2024-08-26T11:34:28.000000Z'
                        created_at: '2024-08-26T11:34:28.000000Z'
                        updated_at: '2024-08-26T11:34:28.000000Z'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 115
                        user_id: 16
                        category_id: 9
                        title: 'Queen, in a Little Bill It.'
                        description: 'Sunt ea officia aut voluptas vero. Qui laudantium quaerat autem veniam libero. Nihil et illo aut repellat delectus aut culpa.'
                        due_date: '2024-09-15'
                        status: pending
                        created_at: '2024-08-26T11:34:28.000000Z'
                        updated_at: '2024-08-26T11:34:28.000000Z'
                        user:
                          id: 16
                          name: 'Ms. Duane Boehm I'
                          email: delphine20@example.com
                          email_verified_at: '2024-08-26T11:34:28.000000Z'
                          created_at: '2024-08-26T11:34:28.000000Z'
                          updated_at: '2024-08-26T11:34:28.000000Z'
                      -
                        id: 116
                        user_id: 17
                        category_id: 6
                        title: "I've got to the porpoise."
                        description: 'Enim molestiae rem consequatur minima voluptate qui. Iure nisi voluptatum voluptate rem fugiat corrupti.'
                        due_date: '2024-09-07'
                        status: pending
                        created_at: '2024-08-26T11:34:28.000000Z'
                        updated_at: '2024-08-26T11:34:28.000000Z'
                        user:
                          id: 17
                          name: 'Arnold Wilkinson'
                          email: astrid.bayer@example.net
                          email_verified_at: '2024-08-26T11:34:28.000000Z'
                          created_at: '2024-08-26T11:34:28.000000Z'
                          updated_at: '2024-08-26T11:34:28.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 115
                        user_id:
                          type: integer
                          example: 16
                        category_id:
                          type: integer
                          example: 9
                        title:
                          type: string
                          example: 'Queen, in a Little Bill It.'
                        description:
                          type: string
                          example: 'Sunt ea officia aut voluptas vero. Qui laudantium quaerat autem veniam libero. Nihil et illo aut repellat delectus aut culpa.'
                        due_date:
                          type: string
                          example: '2024-09-15'
                        status:
                          type: string
                          example: pending
                        created_at:
                          type: string
                          example: '2024-08-26T11:34:28.000000Z'
                        updated_at:
                          type: string
                          example: '2024-08-26T11:34:28.000000Z'
                        user:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 16
                            name:
                              type: string
                              example: 'Ms. Duane Boehm I'
                            email:
                              type: string
                              example: delphine20@example.com
                            email_verified_at:
                              type: string
                              example: '2024-08-26T11:34:28.000000Z'
                            created_at:
                              type: string
                              example: '2024-08-26T11:34:28.000000Z'
                            updated_at:
                              type: string
                              example: '2024-08-26T11:34:28.000000Z'
      tags:
        - Task
    post:
      summary: ''
      operationId: postApiTasks
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: obhxck
                description:
                  type: string
                  description: ''
                  example: 'Est aut quia dolores officiis officiis atque eligendi.'
                due_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>today</code>.'
                  example: '2038-02-18'
                status:
                  type: string
                  description: ''
                  example: completed
                  enum:
                    - pending
                    - completed
                category_id:
                  type: string
                  description: ''
                  example: null
              required:
                - title
  '/api/tasks/{id}':
    get:
      summary: ''
      operationId: getApiTasksId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  error: 'The route api/tasks/7 could not be found.'
                properties:
                  error:
                    type: string
                    example: 'The route api/tasks/7 could not be found.'
      tags:
        - Task
    put:
      summary: ''
      operationId: putApiTasksId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Task
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fcpzuikxvzvjhiazmyqe
                description:
                  type: string
                  description: ''
                  example: 'Deleniti autem itaque laboriosam ut nisi non nihil.'
                due_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>today</code>.'
                  example: '2103-09-21'
                status:
                  type: string
                  description: ''
                  example: completed
                  enum:
                    - pending
                    - completed
                category_id:
                  type: string
                  description: ''
                  example: null
    delete:
      summary: ''
      operationId: deleteApiTasksId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Task
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the task.'
        example: 7
        required: true
        schema:
          type: integer
tags:
  -
    name: Auth
    description: "\nAuth related APIs"
  -
    name: Category
    description: "\nAPIs to manage categories"
  -
    name: Task
    description: "\nAPIs to managing task"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: 'You can retrieve your token by visiting your dashboard and clicking <b>Generate API token</b>.'
security:
  -
    default: []
